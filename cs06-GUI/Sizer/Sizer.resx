<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picCritter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HO8yk5jmaE+72tfO9vUEBAA7
</value>
  </data>
</root>